@model Insight.Portal.App.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = null;
}

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "formRegister" }))
{
    @Html.AntiForgeryToken()
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h3 class="modal-title">Register New User</h3>
    </div>
    <div class="modal-body">
        <div class="form-horizontal">
            @*@Html.ValidationSummary()*@
            <div class="form-group">
                @Html.LabelFor(m => m.UserName, new { @class = "col-md-3 control-label" })
                <div class="col-md-7">
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-3 control-label" })
                <div class="col-md-7">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-3 control-label" })
                <div class="col-md-7">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.FirstName, new { @class = "col-md-3 control-label" })
                <div class="col-md-7">
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.LastName, new { @class = "col-md-3 control-label" })
                <div class="col-md-7">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-3 control-label" })
                <div class="col-md-7">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", Type = "email" })
                </div>
            </div>
    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-3 control-label" })
        <div class="col-md-7">
            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
        </div>
    </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="submit" class="btn btn-success" data-toggle="tooltip" data-placement="bottom" title="Register User">Register</button>
        <button type="button" class="btn btn-default" data-dismiss="modal" data-toggle="tooltip" data-placement="bottom" title="Cancel">Cancel</button>
    </div>
}
<script type="text/javascript">
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip({ container: 'body' });
        $('#formRegister').validate({
            rules: {
                UserName: {
                    required: true
                },
                Password: {
                    required: true,
                    minlength: 6
                },
                ConfirmPassword: {
                    required: true,
                    equalTo: "#Password"
                },
                FirstName: {
                    required: true
                }
            },
            highlight: function (element) {
                $(element).closest('.form-group').addClass('has-error');
            },
            unhighlight: function (element) {
                $(element).closest('.form-group').removeClass('has-error');
            },
            errorElement: 'span',
            errorClass: 'help-block',
            errorPlacement: function (error, element) {
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                } else {
                    error.insertAfter(element);
                }
            }
        });
    });
</script>

